// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScientificResearch.API.Data;

#nullable disable

namespace ScientificResearch.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240404053128_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvestigatorScientificInvestigation", b =>
                {
                    b.Property<int>("InvestigatorsId")
                        .HasColumnType("int");

                    b.Property<int>("ScientificInvestigationsId")
                        .HasColumnType("int");

                    b.HasKey("InvestigatorsId", "ScientificInvestigationsId");

                    b.HasIndex("ScientificInvestigationsId");

                    b.ToTable("InvestigatorScientificInvestigation");
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.Investigator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("membership")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("specialty")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Investigators");
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.Publication", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScientificInvestigationsId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.HasIndex("ScientificInvestigationsId");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.ScientificInvestigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ScientificInvestigations");
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.searchActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ScientificInvestigationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScientificInvestigationsId");

                    b.ToTable("searchActivities");
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.specializedResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ScientificInvestigationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("deliveyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("supplier")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ScientificInvestigationsId");

                    b.ToTable("specializedResources");
                });

            modelBuilder.Entity("searchActivityspecializedResource", b =>
                {
                    b.Property<int>("SearchActivitiesId")
                        .HasColumnType("int");

                    b.Property<int>("SpecializedResourcesId")
                        .HasColumnType("int");

                    b.HasKey("SearchActivitiesId", "SpecializedResourcesId");

                    b.HasIndex("SpecializedResourcesId");

                    b.ToTable("searchActivityspecializedResource");
                });

            modelBuilder.Entity("InvestigatorScientificInvestigation", b =>
                {
                    b.HasOne("ScientificResearch.Shared.Entities.Investigator", null)
                        .WithMany()
                        .HasForeignKey("InvestigatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScientificResearch.Shared.Entities.ScientificInvestigation", null)
                        .WithMany()
                        .HasForeignKey("ScientificInvestigationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.Publication", b =>
                {
                    b.HasOne("ScientificResearch.Shared.Entities.ScientificInvestigation", "ScientificInvestigations")
                        .WithMany("Publications")
                        .HasForeignKey("ScientificInvestigationsId");

                    b.Navigation("ScientificInvestigations");
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.searchActivity", b =>
                {
                    b.HasOne("ScientificResearch.Shared.Entities.ScientificInvestigation", "ScientificInvestigations")
                        .WithMany("SearchActivities")
                        .HasForeignKey("ScientificInvestigationsId");

                    b.Navigation("ScientificInvestigations");
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.specializedResource", b =>
                {
                    b.HasOne("ScientificResearch.Shared.Entities.ScientificInvestigation", "ScientificInvestigations")
                        .WithMany("SpecializedResources")
                        .HasForeignKey("ScientificInvestigationsId");

                    b.Navigation("ScientificInvestigations");
                });

            modelBuilder.Entity("searchActivityspecializedResource", b =>
                {
                    b.HasOne("ScientificResearch.Shared.Entities.searchActivity", null)
                        .WithMany()
                        .HasForeignKey("SearchActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScientificResearch.Shared.Entities.specializedResource", null)
                        .WithMany()
                        .HasForeignKey("SpecializedResourcesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScientificResearch.Shared.Entities.ScientificInvestigation", b =>
                {
                    b.Navigation("Publications");

                    b.Navigation("SearchActivities");

                    b.Navigation("SpecializedResources");
                });
#pragma warning restore 612, 618
        }
    }
}
